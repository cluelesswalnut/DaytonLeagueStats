# This script takes the data generated by `DaytonLeagueStats.py`
# and sums up the stats for each player across multiple leagues.
# The result is then saved in new JSON files

import json

def sum_stats(player, playerStatsDict, teamDict):
    """
    Sums a players stats in a dict

    @param  player              the player's name
    @param  playerStatsDict     the dict containing each players stats
    @param  teamDict            the dict containing each teams stats
    """
    if player not in playerStatsDict:
        playerStatsDict[player] = {}
        playerStatsDict[player]['wins'] = 0
        playerStatsDict[player]['loses'] = 0
        playerStatsDict[player]['ties'] = 0
        playerStatsDict[player]['nLeagues'] = 0
        playerStatsDict[player]['eachLeagueWins'] = []
        playerStatsDict[player]['eachLeagueLoses'] = []
        playerStatsDict[player]['eachLeagueTies'] = []
    playerStatsDict[player]['wins'] += int(teamDict['wins'])
    playerStatsDict[player]['loses'] += int(teamDict['loses'])
    playerStatsDict[player]['ties'] += int(teamDict['ties'])
    playerStatsDict[player]['nLeagues'] += 1
    playerStatsDict[player]['eachLeagueWins'].append(int(teamDict['wins']))
    playerStatsDict[player]['eachLeagueLoses'].append(int(teamDict['loses']))
    playerStatsDict[player]['eachLeagueTies'].append(int(teamDict['ties']))

# load the output from `DaytonLeagueStats.py`
with open('DaytonLeagueData.json', 'r') as inFile:
    data = json.load(inFile)

playerStats = {}
captainStats = {}

# sum the player stats across each league
for leagueKey, leagueValue in data.items():
    for teamKey, teamValue in leagueValue.items():
        captains = teamValue['captains']
        playerList = teamValue['players']
        for player in playerList:
            sum_stats(player, playerStats, teamValue)
        for captain in captains:
            sum_stats(captain, captainStats, teamValue)

# Output the summed player data
with open('PlayerStats.json', 'w') as outFile:
    json.dump(playerStats, outFile)

with open('CaptainStats.json', 'w') as outFile:
    json.dump(captainStats, outFile)